#########Educational Codeforces Round 94 (Rated for Div. 2)#########

Problem A
Problem  : https://codeforces.com/contest/1400/problem/A
editorial: https://codeforces.com/blog/entry/81942
Learening:
     if you think a quesiton is tought then you are missing silly clue in question/test case that leads to simple 2 to 3 line solution. if you think the 
     question is easy then it means you are missing some important constarin in the problem that can only be solve via an specific algorithm. so no matter what 
     remember to study questions multiple time.
     Approach 1:  since question said 1 to 2n-1 ,so we are plugging element at even index and create our string so it match atleast one position in contigeous substing.
     Approach 2:  look care fully the middle element of the string always participate in all the contigeous substring. only for Best of Best this idea click.
	My Code:
		"""
		    #No Idea How to even solve scared at the question
		"""
	CP Programmer:
		"""
		    for _ in range(int(input())):
			n=int(input())
			s=input()
			#print(s[0::2])  #Approach 1
			print(s[n-1]*n)  #Approach 2


		"""

Problem B
Problem  : https://codeforces.com/contest/1400/problem/B
editorial: https://codeforces.com/blog/entry/81942
Learening: 
     At first think of brute force atlest. in this problem we alwasys keep smaller weight material as sword (very simple logic even baby will know it but you dont 
     shame of you). first fill the bag with sword for both us and friend then fill the remaining with the war axe. 

	My Code:
		"""
		    #No Idea How to even solve scared at the question
		"""	

	Cp thinker:
		"""
  		  for _ in range(Iint()):
			myCapacity,friendCapcity=Ilist()
			countSword,countWarAxe=Ilist()
			SwordWeight,WarAxeWeight=Ilist()

			if SwordWeight>WarAxeWeight:                                   #Alwasys keeping min weight as sword
				SwordWeight,WarAxeWeight=WarAxeWeight,SwordWeight
				countSword,countWarAxe=countWarAxe,countSword
			TotalCount=myCapacity//SwordWeight+friendCapcity//SwordWeight    #if we have more sword that what we can carry then carry only sword

			if TotalCount<=countSword:
				print(TotalCount)
				continue
			else:
				TotalCount=countSword
				for i in range(0,countSword+1):               #finding all combo of who taking how many sword and remaing space filled with war axe and store the max value
					p,f=myCapacity,friendCapcity
					p-=SwordWeight*i
					f-=(countSword-i)*SwordWeight
					if p>=0 and f>=0:                     # dont forget this part some times swords may be higher than friends capacity then we will get -ve value
						TotalCount=max(TotalCount,countSword+p//WarAxeWeight+f//WarAxeWeight)
			print (min(TotalCount,countSword+countWarAxe))        # since we fill the remaining space with warAxe some time we filled will exceed the given amount so we print min of our count or give count
	

		"""
Problem C
Problem  : https://codeforces.com/contest/1400/problem/C
editorial: https://codeforces.com/blog/entry/81942
Learening: 
     this is really simple question i dont know how could you unable to atleast think brute for it? The important point to be observed from the question is that if 
     if an index in new string is "0" means both w[i+x] and w[i-x] are zero (Heart of the question you dont even get this clue only best cp can do this). construct a string
     with full of 1 and loop through new string if 0 found then "w[i+x] and w[i-x]" both place put 0 if exist. dont create array of 0 and put 1 worst mistake done today
     after constructiong W , we construct an string with it and check it constructed string and given string are same
	My Code:
		"""
		    #No Idea How to even solve scared at the question
		"""

	Cp thinker:
               """
		for _ in range(Iint()):
			s=list(map(int,input()))
			x=Iint()
			n=len(s)
			w=[1 for i in s]
			for i in range(n):                       #generating W
				if s[i]==0:
					if i>=x:
						w[i-x]=0
					if i+x<len(s):
						w[i+x]=0
			newString=[]
			for i in range(n):			#constructing new string
				temp=0
				if i>=x and w[i-x]==1:
					temp=1
				if i+x<len(s) and w[i+x]==1:
					temp=1
				newString.append(temp)
				#print(n,s,newString)
			if newString==s:			#validating our given string with new string
				Plist(w)
			else:
				print(-1)

               """

Problem D
Problem  : https://codeforces.com/contest/1400/problem/D
editorial: https://codeforces.com/blog/entry/81942
Learening: 
     one of the problem with no clue on how to do. but really simple to solve. just use two pointer method. one pointer to keep track of count of value in left and other
     to keep track fo value on right. Think twise the heart of code to understand logic

	My Code:
		"""
		    #No Idea How to even solve scared at the question
		"""

	Cp thinker:
               """
		for _ in range(Iint()):
			n=Iint()
			array=Ilist()
			cntLeft=[0]*(n+1)        #in question given that max val will be n so create an array with length n To store count of each value form left
			ans=0
			for i,Ival in enumerate(array):
				cntRight=[0]*(n+1)                                         #To store count of each value from right
				for j in range(n-1,i,-1):
					ans+=cntLeft[array[j]]*cntRight[array[i]]          #Heart of code vvvv.important
					cntRight[array[j]]+=1
				cntLeft[array[i]]+=1
			print(ans)

               """

***********************************************************************************************************************************************************************
